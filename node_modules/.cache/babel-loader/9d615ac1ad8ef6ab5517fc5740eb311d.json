{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/DrinkDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { getMealRecomendations } from '../services/theMealAPI';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport Recommendations from '../components/Recommendations';\n\nconst DrinkDetails = props => {\n  const [drinkData, setdrinkData] = useState([]);\n  const [recomendedFood, setRecomendedFood] = useState([]);\n  const [copy, setCopy] = useState(false);\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const maxResult = 6;\n  useEffect(() => {\n    const getDataDrinkDetail = async () => {\n      const data = await getDrinkDetail(id);\n      setdrinkData(...data);\n    };\n\n    console.log('teste');\n    getDataDrinkDetail();\n  }, [id]);\n  useEffect(() => {\n    const fetchRecomended = async () => {\n      const recomendedArray = await getMealRecomendations();\n      setRecomendedFood(recomendedArray);\n    };\n\n    fetchRecomended();\n  }, []);\n  const {\n    strDrink,\n    strDrinkThumb,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = drinkData;\n  const maxIngredients = 20;\n\n  function shareLink() {\n    setCopy(true);\n    return navigator.clipboard.writeText(window.location.href);\n  }\n\n  function listIngredients() {\n    const list = [];\n\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (drinkData[`strIngredient${index}`]) {\n        list.push(`${drinkData[`strIngredient${index}`]} - ${drinkData[`strMeasure${index}`]}`);\n      }\n    }\n\n    return list;\n  }\n\n  function renderDetails() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: strDrinkThumb,\n      alt: strDrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, strDrink), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      onClick: shareLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, copy ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Link copiado!\") : /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"Compartilhar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Favoritar\"), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, `${strCategory} | ${strAlcoholic}`), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, listIngredients().map((ingredient, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, `${ingredient}`))), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(Recommendations, {\n      recommendations: recomendedFood.slice(0, maxResult),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"start-btn\",\n      type: \"button\",\n      \"data-testid\": \"start-recipe-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Iniciar Receita\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, drinkData && renderDetails());\n};\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default DrinkDetails;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/DrinkDetails.js"],"names":["React","useState","useEffect","PropTypes","getDrinkDetail","getMealRecomendations","Recommendations","DrinkDetails","props","drinkData","setdrinkData","recomendedFood","setRecomendedFood","copy","setCopy","match","params","id","maxResult","getDataDrinkDetail","data","console","log","fetchRecomended","recomendedArray","strDrink","strDrinkThumb","strCategory","strInstructions","strAlcoholic","maxIngredients","shareLink","navigator","clipboard","writeText","window","location","href","listIngredients","list","index","push","renderDetails","shareIcon","map","ingredient","slice","propTypes","shape","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { getMealRecomendations } from '../services/theMealAPI';\nimport shareIcon from '../images/shareIcon.svg';\nimport Recommendations from '../components/Recommendations';\n\nconst DrinkDetails = (props) => {\n  const [drinkData, setdrinkData] = useState([]);\n  const [recomendedFood, setRecomendedFood] = useState([]);\n  const [copy, setCopy] = useState(false);\n  const { match: { params: { id } } } = props;\n\n  const maxResult = 6;\n\n  useEffect(() => {\n    const getDataDrinkDetail = async () => {\n      const data = await getDrinkDetail(id);\n      setdrinkData(...data);\n    };\n    console.log('teste');\n    getDataDrinkDetail();\n  }, [id]);\n\n  useEffect(() => {\n    const fetchRecomended = async () => {\n      const recomendedArray = await getMealRecomendations();\n      setRecomendedFood(recomendedArray);\n    };\n    fetchRecomended();\n  }, []);\n\n  const {\n    strDrink,\n    strDrinkThumb,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n  } = drinkData;\n  const maxIngredients = 20;\n\n  function shareLink() {\n    setCopy(true);\n    return navigator.clipboard.writeText(window.location.href);\n  }\n\n  function listIngredients() {\n    const list = [];\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (drinkData[`strIngredient${index}`]) {\n        list.push(\n          `${drinkData[`strIngredient${index}`]} - ${drinkData[`strMeasure${index}`]}`,\n        );\n      }\n    }\n    return list;\n  }\n\n  function renderDetails() {\n    return (\n      <section>\n        <img data-testid=\"recipe-photo\" src={ strDrinkThumb } alt={ strDrink } />\n        <h2 data-testid=\"recipe-title\">{ strDrink }</h2>\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n          onClick={ shareLink }\n        >\n          {copy ? (\n            <span>Link copiado!</span>\n          ) : (<img src={ shareIcon } alt=\"Compartilhar\" />)}\n        </button>\n        <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n        <h4 data-testid=\"recipe-category\">{ `${strCategory} | ${strAlcoholic}` }</h4>\n        <ol>\n\n          {\n            listIngredients().map((ingredient, index) => (\n              <li\n                key={ index }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                { `${ingredient}` }\n              </li>\n            ))\n          }\n        </ol>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n        <Recommendations recommendations={ recomendedFood.slice(0, maxResult) } />\n        <button\n          className=\"start-btn\"\n          type=\"button\"\n          data-testid=\"start-recipe-btn\"\n        >\n          Iniciar Receita\n\n        </button>\n      </section>\n    );\n  }\n\n  return (\n    <div>{ drinkData && renderDetails() }</div>\n  );\n};\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired,\n};\n\nexport default DrinkDetails;\n"]},"metadata":{},"sourceType":"module"}