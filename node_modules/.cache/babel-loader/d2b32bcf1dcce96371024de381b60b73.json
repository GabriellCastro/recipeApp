{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/Foods.js\";\nimport React, { useEffect, useContext } from 'react';\nimport MainContext from '../context/MainContext';\nimport Header from '../components/Header';\nimport FooterMenu from '../components/FooterMenu';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport { getInitialMealsRecipes, getMealsCategoryList, getMealsByCategory } from '../services/theMealAPI';\n\nfunction Foods() {\n  const {\n    setData,\n    loading,\n    setLoading,\n    categoryList,\n    setCategoryList,\n    categorySelected,\n    setCategorySelected\n  } = useContext(MainContext);\n\n  function filterByCategory({\n    target: {\n      innerText\n    }\n  }) {\n    if (innerText === categorySelected || innerText === 'All') {\n      getInitialMealsRecipes().then(meals => {\n        setData(meals);\n      });\n    } else {\n      getMealsByCategory(innerText).then(meals => {\n        setData(meals);\n      });\n      setCategorySelected(innerText);\n    }\n  }\n\n  function categoryButtons() {\n    const maxCategoryNumber = 4;\n    return categoryList.map((item, index) => index > maxCategoryNumber ? null : /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      type: \"button\",\n      \"data-testid\": `${item.strCategory}-category-filter`,\n      onClick: filterByCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, item.strCategory));\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getInitialMealsRecipes().then(meals => {\n      setData(meals);\n      getMealsCategoryList().then(mealsCategory => {\n        setCategoryList(mealsCategory);\n        setLoading(false);\n      });\n    });\n    return () => {\n      setData([]);\n      setCategoryList([]);\n    };\n  }, [setData, setLoading, setCategoryList]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    isButtonVisible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: filterByCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"All\"), loading ? null : categoryButtons(), /*#__PURE__*/React.createElement(RecipesCardsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Foods;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/Foods.js"],"names":["React","useEffect","useContext","MainContext","Header","FooterMenu","RecipesCardsContainer","getInitialMealsRecipes","getMealsCategoryList","getMealsByCategory","Foods","setData","loading","setLoading","categoryList","setCategoryList","categorySelected","setCategorySelected","filterByCategory","target","innerText","then","meals","categoryButtons","maxCategoryNumber","map","item","index","strCategory","mealsCategory"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport MainContext from '../context/MainContext';\nimport Header from '../components/Header';\nimport FooterMenu from '../components/FooterMenu';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport {\n  getInitialMealsRecipes,\n  getMealsCategoryList,\n  getMealsByCategory,\n}\n  from '../services/theMealAPI';\n\nfunction Foods() {\n  const {\n    setData,\n    loading,\n    setLoading,\n    categoryList,\n    setCategoryList,\n    categorySelected,\n    setCategorySelected,\n  } = useContext(MainContext);\n\n  function filterByCategory({ target: { innerText } }) {\n    if (innerText === categorySelected || innerText === 'All') {\n      getInitialMealsRecipes()\n        .then((meals) => {\n          setData(meals);\n        });\n    } else {\n      getMealsByCategory(innerText)\n        .then((meals) => {\n          setData(meals);\n        });\n      setCategorySelected(innerText);\n    }\n  }\n\n  function categoryButtons() {\n    const maxCategoryNumber = 4;\n    return categoryList.map((item, index) => (\n      index > maxCategoryNumber ? null\n        : (\n          <button\n            key={ index }\n            type=\"button\"\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ filterByCategory }\n          >\n            {item.strCategory}\n          </button>)\n    ));\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getInitialMealsRecipes()\n      .then((meals) => {\n        setData(meals);\n        getMealsCategoryList()\n          .then((mealsCategory) => {\n            setCategoryList(mealsCategory);\n            setLoading(false);\n          });\n      });\n    return () => {\n      setData([]);\n      setCategoryList([]);\n    };\n  }, [setData, setLoading, setCategoryList]);\n\n  return (\n    <div>\n      <Header title=\"Comidas\" isButtonVisible />\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ filterByCategory }\n      >\n        All\n      </button>\n      {loading ? null : categoryButtons()}\n      <RecipesCardsContainer />\n      <FooterMenu />\n    </div>\n\n  );\n}\n\nexport default Foods;\n"]},"metadata":{},"sourceType":"module"}