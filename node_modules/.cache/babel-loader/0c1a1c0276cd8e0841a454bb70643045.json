{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/processoseletivo/recipesApp/src/pages/DrinkRecipeInProgress.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { saveInProgressDrinkRecipes, saveDoneRecipes } from '../helpers/handleLocalStorage';\nimport MainContext from '../context/MainContext';\nimport LSContext from '../context/LSContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport listIngredients from '../helpers/listIngredients';\nimport DrinkLoader from '../components/DrinkLoader';\n\nfunction DrinkRecipeInProgress({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const {\n    LSValues: {\n      inProgressRecipes\n    }\n  } = useContext(LSContext);\n  const {\n    LSFunctions: {\n      setInProgressRecipes,\n      setDoneRecipes\n    }\n  } = useContext(LSContext);\n  const [recipe, setRecipe] = useState({});\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const {\n    loading,\n    setLoading\n  } = useContext(MainContext);\n  const SLICE_NUMBER = -12;\n\n  function lineThroughUsedIngredients({\n    target\n  }) {\n    if (target.checked) {\n      const updatedUsedIngredients = [...usedIngredients, target.value];\n      setUsedIngredients(updatedUsedIngredients);\n      saveInProgressDrinkRecipes(id, updatedUsedIngredients, setInProgressRecipes);\n    } else {\n      const remainingIngredients = usedIngredients.filter(ingredient => ingredient !== target.value);\n      setUsedIngredients(remainingIngredients);\n      saveInProgressDrinkRecipes(id, remainingIngredients, setInProgressRecipes);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getDrinkDetail(id).then(result => {\n      setRecipe(...result);\n      setLoading(false);\n    });\n  }, [setRecipe, setLoading, id]);\n  useEffect(() => {\n    const drinksIngredients = inProgressRecipes.cocktails ? inProgressRecipes.cocktails[id] || [] : [];\n    setUsedIngredients(drinksIngredients);\n  }, [id, inProgressRecipes]);\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = recipe;\n\n  function GetDate() {\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n    return dataAtual;\n  }\n\n  const saveDone = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: '',\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: GetDate(),\n    tags: []\n  };\n  return loading ? /*#__PURE__*/React.createElement(DrinkLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    \"data-testid\": \"recipe-photo\",\n    alt: strDrink,\n    className: \"detail-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drink-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-header-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, strAlcoholic)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-header-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ShareButton, {\n    link: window.location.href.slice(0, SLICE_NUMBER),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    recipeData: recipe,\n    type: \"bebida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-infos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"CheckList de Ingredientes\"), listIngredients(recipe).map((ingredient, index) => /*#__PURE__*/React.createElement(\"label\", {\n    className: usedIngredients.includes(ingredient) ? 'ingredient-checked' : '',\n    htmlFor: index,\n    key: index,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: ingredient,\n    checked: usedIngredients.includes(ingredient),\n    type: \"checkbox\",\n    id: index,\n    className: \"progress-checklist\",\n    name: \"ingredients\",\n    onClick: lineThroughUsedIngredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }), `${ingredient}`))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"progress-instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, strInstructions)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-start-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: listIngredients(recipe).length !== usedIngredients.length,\n    onClick: () => saveDoneRecipes(saveDone, setDoneRecipes),\n    className: \"finish-drink-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Finalizar Receita\"))));\n}\n\nDrinkRecipeInProgress.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default DrinkRecipeInProgress;","map":{"version":3,"sources":["/home/gabriel/processoseletivo/recipesApp/src/pages/DrinkRecipeInProgress.js"],"names":["React","useEffect","useState","useContext","PropTypes","Link","getDrinkDetail","saveInProgressDrinkRecipes","saveDoneRecipes","MainContext","LSContext","ShareButton","FavoriteButton","listIngredients","DrinkLoader","DrinkRecipeInProgress","match","params","id","LSValues","inProgressRecipes","LSFunctions","setInProgressRecipes","setDoneRecipes","recipe","setRecipe","usedIngredients","setUsedIngredients","loading","setLoading","SLICE_NUMBER","lineThroughUsedIngredients","target","checked","updatedUsedIngredients","value","remainingIngredients","filter","ingredient","then","result","drinksIngredients","cocktails","strDrinkThumb","strDrink","strCategory","strInstructions","strAlcoholic","GetDate","data","Date","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","dataAtual","saveDone","type","area","category","alcoholicOrNot","name","image","doneDate","tags","window","location","href","slice","map","index","includes","length","propTypes","shape","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { saveInProgressDrinkRecipes,\n  saveDoneRecipes } from '../helpers/handleLocalStorage';\nimport MainContext from '../context/MainContext';\nimport LSContext from '../context/LSContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport listIngredients from '../helpers/listIngredients';\nimport DrinkLoader from '../components/DrinkLoader';\n\nfunction DrinkRecipeInProgress({ match: { params: { id } } }) {\n  const { LSValues: { inProgressRecipes } } = useContext(LSContext);\n  const { LSFunctions: { setInProgressRecipes, setDoneRecipes } } = useContext(LSContext);\n  const [recipe, setRecipe] = useState({});\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const { loading, setLoading } = useContext(MainContext);\n  const SLICE_NUMBER = -12;\n\n  function lineThroughUsedIngredients({ target }) {\n    if (target.checked) {\n      const updatedUsedIngredients = [...usedIngredients, target.value];\n      setUsedIngredients(updatedUsedIngredients);\n      saveInProgressDrinkRecipes(id, updatedUsedIngredients, setInProgressRecipes);\n    } else {\n      const remainingIngredients = usedIngredients\n        .filter((ingredient) => ingredient !== target.value);\n      setUsedIngredients(remainingIngredients);\n      saveInProgressDrinkRecipes(id, remainingIngredients, setInProgressRecipes);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getDrinkDetail(id)\n      .then((result) => {\n        setRecipe(...result);\n        setLoading(false);\n      });\n  }, [setRecipe, setLoading, id]);\n\n  useEffect(() => {\n    const drinksIngredients = inProgressRecipes.cocktails\n      ? inProgressRecipes.cocktails[id] || []\n      : [];\n    setUsedIngredients(drinksIngredients);\n  }, [id, inProgressRecipes]);\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = recipe;\n\n  function GetDate() {\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n    return dataAtual;\n  }\n\n  const saveDone = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: '',\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: GetDate(),\n    tags: [],\n  };\n\n  return (\n    loading ? <DrinkLoader /> : (\n      <div className=\"progress-page\">\n        <img\n          src={ strDrinkThumb }\n          data-testid=\"recipe-photo\"\n          alt={ strDrink }\n          className=\"detail-img\"\n        />\n        <div className=\"drink-detail\">\n          <div className=\"detail-header-info\">\n            <h3 data-testid=\"recipe-title\">{ strDrink }</h3>\n            <p data-testid=\"recipe-category\">{ strCategory }</p>\n            <p>{ strAlcoholic }</p>\n          </div>\n          <div className=\"detail-header-btn\">\n            <ShareButton link={ window.location.href.slice(0, SLICE_NUMBER) } />\n            <FavoriteButton recipeData={ recipe } type=\"bebida\" />\n          </div>\n        </div>\n        <div className=\"detail-infos\">\n          <form>\n            <h3>CheckList de Ingredientes</h3>\n\n            {\n              listIngredients(recipe).map((ingredient, index) => (\n                <label\n                  className={\n                    usedIngredients.includes(ingredient) ? 'ingredient-checked' : ''\n                  }\n                  htmlFor={ index }\n                  key={ index }\n                  data-testid={ `${index}-ingredient-step` }\n                >\n                  <input\n                    value={ ingredient }\n                    checked={ usedIngredients.includes(ingredient) }\n                    type=\"checkbox\"\n                    id={ index }\n                    className=\"progress-checklist\"\n                    name=\"ingredients\"\n                    onClick={ lineThroughUsedIngredients }\n                  />\n                  { `${ingredient}` }\n                </label>\n              ))\n            }\n          </form>\n          <h3 className=\"progress-instructions\">Instruções</h3>\n          <p data-testid=\"instructions\">{ strInstructions }</p>\n        </div>\n        <div className=\"div-start-btn\">\n          <Link to=\"/receitas-feitas\">\n            <button\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ listIngredients(recipe).length !== usedIngredients.length }\n              onClick={ () => saveDoneRecipes(saveDone, setDoneRecipes) }\n              className=\"finish-drink-btn\"\n            >\n              Finalizar Receita\n            </button>\n          </Link>\n        </div>\n      </div>\n    )\n  );\n}\n\nDrinkRecipeInProgress.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired,\n};\nexport default DrinkRecipeInProgress;\n"]},"metadata":{},"sourceType":"module"}