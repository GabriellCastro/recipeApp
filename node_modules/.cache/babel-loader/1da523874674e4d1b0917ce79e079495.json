{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/processoseletivo/recipesApp/src/pages/RecipeExploreArea.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport MainContext from '../context/MainContext';\nimport FooterMenu from '../components/FooterMenu';\nimport Header from '../components/Header';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport { getInitialMealsRecipes, getMealsArea, getMealsByArea } from '../services/theMealAPI';\nimport FoodLoader from '../components/FoodLoader';\n\nconst RecipeExploreArea = () => {\n  const [areaOptions, setAreaOptions] = useState([{\n    strArea: ''\n  }]);\n  const {\n    loading,\n    setData,\n    setLoading\n  } = useContext(MainContext);\n  useEffect(() => {\n    setLoading(true);\n    getMealsArea().then(result => {\n      setAreaOptions([{\n        strArea: 'All'\n      }, ...result]);\n      getInitialMealsRecipes().then(results => {\n        setData(results);\n        setLoading(false);\n      });\n    });\n  }, [setData, setLoading]);\n\n  function handleChange({\n    target: {\n      value\n    }\n  }) {\n    if (value === 'All') {\n      getInitialMealsRecipes().then(results => {\n        setData(results);\n      });\n    } else {\n      getMealsByArea(value).then(results => {\n        setData(results);\n      });\n    }\n  }\n\n  return loading ? /*#__PURE__*/React.createElement(FoodLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Origem\",\n    isButtonVisible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"explore-by-area-dropdown\",\n    onChange: handleChange,\n    className: \"explore-select-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, areaOptions.map((region, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    \"data-testid\": `${region.strArea}-option`,\n    className: \"explore-option-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, region.strArea))), /*#__PURE__*/React.createElement(RecipesCardsContainer, {\n    test: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FooterMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RecipeExploreArea;","map":{"version":3,"sources":["/home/gabriel/processoseletivo/recipesApp/src/pages/RecipeExploreArea.js"],"names":["React","useContext","useEffect","useState","MainContext","FooterMenu","Header","RecipesCardsContainer","getInitialMealsRecipes","getMealsArea","getMealsByArea","FoodLoader","RecipeExploreArea","areaOptions","setAreaOptions","strArea","loading","setData","setLoading","then","result","results","handleChange","target","value","map","region","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,SACEC,sBADF,EAC0BC,YAD1B,EACwCC,cADxC,QAC8D,wBAD9D;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAC;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAD,CAA9C;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAmCjB,UAAU,CAACG,WAAD,CAAnD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,YAAY,GACTU,IADH,CACSC,MAAD,IAAY;AAChBN,MAAAA,cAAc,CAAC,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,EAAqB,GAAGK,MAAxB,CAAD,CAAd;AACAZ,MAAAA,sBAAsB,GACnBW,IADH,CACSE,OAAD,IAAa;AACjBJ,QAAAA,OAAO,CAACI,OAAD,CAAP;AACAH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAJH;AAKD,KARH;AASD,GAXQ,EAWN,CAACD,OAAD,EAAUC,UAAV,CAXM,CAAT;;AAaA,WAASI,YAAT,CAAsB;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAtB,EAA6C;AAC3C,QAAIA,KAAK,KAAK,KAAd,EAAqB;AACnBhB,MAAAA,sBAAsB,GACnBW,IADH,CACSE,OAAD,IAAa;AACjBJ,QAAAA,OAAO,CAACI,OAAD,CAAP;AACD,OAHH;AAID,KALD,MAKO;AACLX,MAAAA,cAAc,CAACc,KAAD,CAAd,CACGL,IADH,CACSE,OAAD,IAAa;AACjBJ,QAAAA,OAAO,CAACI,OAAD,CAAP;AACD,OAHH;AAID;AACF;;AAED,SACEL,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACL,uDACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,iBAAd;AAAgC,IAAA,eAAe,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,mBAAY,0BADd;AAEE,IAAA,QAAQ,EAAGM,YAFb;AAGE,IAAA,SAAS,EAAC,sBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIT,WAAW,CAACY,GAAZ,CAAgB,CAACC,MAAD,EAASC,KAAT,kBAChB;AACE,IAAA,GAAG,EAAGA,KADR;AAEE,mBAAe,GAAED,MAAM,CAACX,OAAQ,SAFlC;AAGE,IAAA,SAAS,EAAC,sBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIW,MAAM,CAACX,OALX,CADA,CALJ,CAFF,eAiBE,oBAAC,qBAAD;AAAuB,IAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAkBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CAFJ;AAwBD,CAvDD;;AAyDA,eAAeH,iBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport MainContext from '../context/MainContext';\nimport FooterMenu from '../components/FooterMenu';\nimport Header from '../components/Header';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport {\n  getInitialMealsRecipes, getMealsArea, getMealsByArea } from '../services/theMealAPI';\nimport FoodLoader from '../components/FoodLoader';\n\nconst RecipeExploreArea = () => {\n  const [areaOptions, setAreaOptions] = useState([{ strArea: '' }]);\n  const { loading, setData, setLoading } = useContext(MainContext);\n\n  useEffect(() => {\n    setLoading(true);\n    getMealsArea()\n      .then((result) => {\n        setAreaOptions([{ strArea: 'All' }, ...result]);\n        getInitialMealsRecipes()\n          .then((results) => {\n            setData(results);\n            setLoading(false);\n          });\n      });\n  }, [setData, setLoading]);\n\n  function handleChange({ target: { value } }) {\n    if (value === 'All') {\n      getInitialMealsRecipes()\n        .then((results) => {\n          setData(results);\n        });\n    } else {\n      getMealsByArea(value)\n        .then((results) => {\n          setData(results);\n        });\n    }\n  }\n\n  return (\n    loading ? <FoodLoader /> : (\n      <>\n        <Header title=\"Explorar Origem\" isButtonVisible />\n        <select\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ handleChange }\n          className=\"explore-select-input\"\n        >\n          { areaOptions.map((region, index) => (\n            <option\n              key={ index }\n              data-testid={ `${region.strArea}-option` }\n              className=\"explore-option-input\"\n            >\n              { region.strArea }\n            </option>\n          ))}\n        </select>\n        <RecipesCardsContainer test=\"recipe\" />\n        <FooterMenu />\n      </>\n    )\n  );\n};\n\nexport default RecipeExploreArea;\n"]},"metadata":{},"sourceType":"module"}