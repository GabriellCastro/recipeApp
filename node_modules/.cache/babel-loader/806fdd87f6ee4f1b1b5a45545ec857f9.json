{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/components/DoneRecipesCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareButton from './ShareButton';\n\nfunction DoneRecipesCard({\n  recipe,\n  index\n}) {\n  console.log(index);\n  const {\n    image,\n    area,\n    category,\n    id,\n    name,\n    tags,\n    alcoholicOrNot,\n    type,\n    doneDate\n  } = recipe;\n  const path = type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}`;\n  const categoryOrArea = area ? `${area} - ${category}` : alcoholicOrNot;\n  const sliceNumber = -16;\n  const SliceLink = window.location.href.slice(0, sliceNumber);\n  const pathLink = SliceLink.concat(path);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    \"data-testid\": `${index}-horizontal-image`,\n    style: {\n      width: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, categoryOrArea), /*#__PURE__*/React.createElement(Link, {\n    to: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Feita em\", doneDate), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ShareButton, {\n    link: pathLink,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, tags.map(tag => /*#__PURE__*/React.createElement(\"p\", {\n    key: tag,\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, tag)))));\n}\n\nexport default DoneRecipesCard;\nDoneRecipesCard.propTypes = {\n  recipe: PropTypes.shape(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/components/DoneRecipesCard.js"],"names":["React","Link","PropTypes","ShareButton","DoneRecipesCard","recipe","index","console","log","image","area","category","id","name","tags","alcoholicOrNot","type","doneDate","path","categoryOrArea","sliceNumber","SliceLink","window","location","href","slice","pathLink","concat","width","map","tag","propTypes","shape","any","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ShareButton from './ShareButton';\n\nfunction DoneRecipesCard({ recipe, index }) {\n  console.log(index);\n  const {\n    image,\n    area,\n    category,\n    id,\n    name,\n    tags,\n    alcoholicOrNot,\n    type,\n    doneDate,\n  } = recipe;\n  const path = type === 'comida' ? `/comidas/${id}` : `/bebidas/${id}`;\n  const categoryOrArea = area ? `${area} - ${category}` : alcoholicOrNot;\n  const sliceNumber = -16;\n  const SliceLink = (window.location.href).slice(0, sliceNumber);\n  const pathLink = SliceLink.concat(path);\n  return (\n    <section>\n      <div>\n        <Link to={ path }>\n          <img\n            src={ image }\n            alt={ name }\n            data-testid={ `${index}-horizontal-image` }\n            style={ { width: '100px' } }\n          />\n        </Link>\n      </div>\n      <div\n        data-testid={ `${index}-recipe-card` }\n      >\n\n        <h5\n          data-testid={ `${index}-horizontal-top-text` }\n        >\n          { categoryOrArea }\n        </h5>\n        <Link to={ path }>\n          <h4\n            data-testid={ `${index}-horizontal-name` }\n          >\n            { name }\n          </h4>\n        </Link>\n\n        <p\n          data-testid={ `${index}-horizontal-done-date` }\n        >\n          Feita em\n          { doneDate }\n        </p>\n        <div>\n          <ShareButton link={ pathLink } index={ index } />\n        </div>\n        <div>\n          {tags.map((tag) => (\n            <p\n              key={ tag }\n              data-testid={ `${index}-${tag}-horizontal-tag` }\n            >\n              { tag }\n            </p>\n          ))}\n        </div>\n      </div>\n\n    </section>\n\n  );\n}\n\nexport default DoneRecipesCard;\n\nDoneRecipesCard.propTypes = {\n  recipe: PropTypes.shape(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}