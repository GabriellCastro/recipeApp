{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/FoodDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMealDetail } from '../services/theMealAPI';\nimport { getDrinkRecomendations } from '../services/theCockTailAPI';\nimport Recommendations from '../components/Recommendations';\n\nconst FoodDetails = props => {\n  const [foodData, setfoodData] = useState({\n    strYoutube: ''\n  });\n  const [recomendedDrink, setRecomendedDrink] = useState([]);\n  const {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = props;\n  const maxResult = 6;\n  useEffect(() => {\n    const getFoodDetail = async () => {\n      const data = await getMealDetail(id);\n      setfoodData(...data);\n    };\n\n    getFoodDetail();\n  }, [id]);\n  useEffect(() => {\n    const fetchRecomended = async () => {\n      const recomendedArray = await getDrinkRecomendations();\n      setRecomendedDrink(recomendedArray);\n      console.log(recomendedArray);\n    };\n\n    fetchRecomended();\n  }, []);\n  const {\n    strMeal,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strYoutube\n  } = foodData;\n  const maxIngredients = 20;\n\n  function listIngredients() {\n    const list = [];\n\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (foodData[`strIngredient${index}`]) {\n        list.push(`${foodData[`strIngredient${index}`]} - ${foodData[`strMeasure${index}`]}`);\n      }\n    }\n\n    return list;\n  }\n\n  function getVideoTag() {\n    const index = 32;\n    const videoStr = strYoutube.slice(index);\n    return videoStr;\n  }\n\n  function renderDetails() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: strMealThumb,\n      alt: strMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Compartilhar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Favoritar\"), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, strCategory), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, listIngredients().map((ingredient, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, `${ingredient}`))), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${getVideoTag()}`,\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      \"data-testid\": \"video\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Recommendations, {\n      recommendations: recomendedDrink.slice(0, maxResult),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"start-recipe-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Iniciar Receita\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, foodData && renderDetails());\n};\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default FoodDetails;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/FoodDetails.js"],"names":["React","useState","useEffect","PropTypes","getMealDetail","getDrinkRecomendations","Recommendations","FoodDetails","props","foodData","setfoodData","strYoutube","recomendedDrink","setRecomendedDrink","match","params","id","maxResult","getFoodDetail","data","fetchRecomended","recomendedArray","console","log","strMeal","strMealThumb","strCategory","strInstructions","maxIngredients","listIngredients","list","index","push","getVideoTag","videoStr","slice","renderDetails","map","ingredient","propTypes","shape","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMealDetail } from '../services/theMealAPI';\nimport { getDrinkRecomendations } from '../services/theCockTailAPI';\nimport Recommendations from '../components/Recommendations';\n\nconst FoodDetails = (props) => {\n  const [foodData, setfoodData] = useState({ strYoutube: '' });\n  const [recomendedDrink, setRecomendedDrink] = useState([]);\n  const { match: { params: { id } } } = props;\n\n  const maxResult = 6;\n\n  useEffect(() => {\n    const getFoodDetail = async () => {\n      const data = await getMealDetail(id);\n      setfoodData(...data);\n    };\n    getFoodDetail();\n  }, [id]);\n\n  useEffect(() => {\n    const fetchRecomended = async () => {\n      const recomendedArray = await getDrinkRecomendations();\n      setRecomendedDrink(recomendedArray);\n      console.log(recomendedArray);\n    };\n    fetchRecomended();\n  }, []);\n\n  const {\n    strMeal,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strYoutube,\n  } = foodData;\n  const maxIngredients = 20;\n\n  function listIngredients() {\n    const list = [];\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (foodData[`strIngredient${index}`]) {\n        list.push(\n          `${foodData[`strIngredient${index}`]} - ${foodData[`strMeasure${index}`]}`,\n        );\n      }\n    }\n    return list;\n  }\n\n  function getVideoTag() {\n    const index = 32;\n    const videoStr = strYoutube.slice(index);\n    return videoStr;\n  }\n\n  function renderDetails() {\n    return (\n      <section>\n        <img data-testid=\"recipe-photo\" src={ strMealThumb } alt={ strMeal } />\n        <h2 data-testid=\"recipe-title\">{ strMeal }</h2>\n        <button type=\"button\" data-testid=\"share-btn\">Compartilhar</button>\n        <button type=\"button\" data-testid=\"favorite-btn\">Favoritar</button>\n        <h4 data-testid=\"recipe-category\">{ strCategory }</h4>\n        <ol>\n\n          {\n            listIngredients().map((ingredient, index) => (\n              <li\n                key={ index }\n                data-testid={ `${index}-ingredient-name-and-measure` }\n              >\n                { `${ingredient}` }\n              </li>\n            ))\n          }\n        </ol>\n        <p data-testid=\"instructions\">{strInstructions}</p>\n        <iframe\n          width=\"560\"\n          height=\"315\"\n          src={ `https://www.youtube.com/embed/${getVideoTag()}` }\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          data-testid=\"video\"\n          allow=\"accelerometer;\n          autoplay; clipboard-write;\n          encrypted-media; gyroscope;\n          picture-in-picture\"\n          allowFullScreen\n        />\n        <Recommendations recommendations={ recomendedDrink.slice(0, maxResult) } />\n        <button type=\"button\" data-testid=\"start-recipe-btn\">Iniciar Receita</button>\n      </section>\n    );\n  }\n\n  return (\n    <div>{ foodData && renderDetails() }</div>\n  );\n};\n\nFoodDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired,\n};\n\nexport default FoodDetails;\n"]},"metadata":{},"sourceType":"module"}