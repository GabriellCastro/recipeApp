{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/Drinks.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MainContext from '../context/MainContext';\nimport Header from '../components/Header';\nimport FooterMenu from '../components/FooterMenu';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport { getInitialDrinksRecipes, getDrinksCategoryList, getDrinksByCategory } from '../services/theCockTailAPI';\n\nfunction Drinks() {\n  const {\n    setData,\n    loading,\n    setLoading,\n    categoryList,\n    setCategoryList,\n    categorySelected,\n    setCategorySelected\n  } = useContext(MainContext);\n  const {\n    location: {\n      state\n    }\n  } = useHistory();\n\n  function filterByCategory({\n    target: {\n      innerText\n    }\n  }) {\n    if (innerText === categorySelected || innerText === 'All') {\n      getInitialDrinksRecipes().then(drinks => {\n        setData(drinks);\n      });\n    } else {\n      getDrinksByCategory(innerText).then(drinks => {\n        setData(drinks);\n      });\n      setCategorySelected(innerText);\n    }\n  }\n\n  function categoryButtons() {\n    const maxCategoryNumber = 4;\n    return categoryList.map((item, index) => index > maxCategoryNumber ? null : /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      type: \"button\",\n      \"data-testid\": `${item.strCategory}-category-filter`,\n      onClick: filterByCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, item.strCategory));\n  }\n\n  useEffect(() => {\n    if (!state) {\n      setLoading(true);\n      getInitialDrinksRecipes().then(drinks => {\n        setData(drinks);\n        getDrinksCategoryList().then(drinksCategory => {\n          setCategoryList(drinksCategory);\n          setLoading(false);\n        });\n      });\n    }\n\n    return () => {\n      setData(['', '']);\n      setCategoryList([]);\n    };\n  }, [setData, setLoading, setCategoryList, state]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Bebidas\",\n    isButtonVisible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"All-category-filter\",\n    type: \"button\",\n    onClick: filterByCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"All\"), loading ? null : categoryButtons(), /*#__PURE__*/React.createElement(RecipesCardsContainer, {\n    test: \"recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Drinks;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/Drinks.js"],"names":["React","useEffect","useContext","useHistory","MainContext","Header","FooterMenu","RecipesCardsContainer","getInitialDrinksRecipes","getDrinksCategoryList","getDrinksByCategory","Drinks","setData","loading","setLoading","categoryList","setCategoryList","categorySelected","setCategorySelected","location","state","filterByCategory","target","innerText","then","drinks","categoryButtons","maxCategoryNumber","map","item","index","strCategory","drinksCategory"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport MainContext from '../context/MainContext';\nimport Header from '../components/Header';\nimport FooterMenu from '../components/FooterMenu';\nimport RecipesCardsContainer from '../components/RecipesCardsContainer';\nimport {\n  getInitialDrinksRecipes,\n  getDrinksCategoryList,\n  getDrinksByCategory,\n}\n  from '../services/theCockTailAPI';\n\nfunction Drinks() {\n  const {\n    setData,\n    loading,\n    setLoading,\n    categoryList,\n    setCategoryList,\n    categorySelected,\n    setCategorySelected,\n  } = useContext(MainContext);\n  const { location: { state } } = useHistory();\n  function filterByCategory({ target: { innerText } }) {\n    if (innerText === categorySelected || innerText === 'All') {\n      getInitialDrinksRecipes()\n        .then((drinks) => {\n          setData(drinks);\n        });\n    } else {\n      getDrinksByCategory(innerText)\n        .then((drinks) => {\n          setData(drinks);\n        });\n      setCategorySelected(innerText);\n    }\n  }\n\n  function categoryButtons() {\n    const maxCategoryNumber = 4;\n    return categoryList.map((item, index) => (\n      index > maxCategoryNumber ? null\n        : (\n          <button\n            key={ index }\n            type=\"button\"\n            data-testid={ `${item.strCategory}-category-filter` }\n            onClick={ filterByCategory }\n          >\n            {item.strCategory}\n          </button>)\n    ));\n  }\n\n  useEffect(() => {\n    if (!state) {\n      setLoading(true);\n      getInitialDrinksRecipes()\n        .then((drinks) => {\n          setData(drinks);\n          getDrinksCategoryList()\n            .then((drinksCategory) => {\n              setCategoryList(drinksCategory);\n              setLoading(false);\n            });\n        });\n    } return () => {\n      setData(['', '']);\n      setCategoryList([]);\n    };\n  }, [setData, setLoading, setCategoryList, state]);\n\n  return (\n    <div>\n      <Header title=\"Bebidas\" isButtonVisible />\n      <button\n        data-testid=\"All-category-filter\"\n        type=\"button\"\n        onClick={ filterByCategory }\n      >\n        All\n      </button>\n      {loading ? null : categoryButtons()}\n      <RecipesCardsContainer test=\"recipe\" />\n      <FooterMenu />\n    </div>\n  );\n}\n\nexport default Drinks;\n"]},"metadata":{},"sourceType":"module"}