{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/context/LSProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport LSContext from './LSContext';\n\nfunction LSProvider({\n  children\n}) {\n  const [email, setEmail] = useState({\n    email: ''\n  });\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const [inProgressRecipes, setInProgressRecipes] = useState({\n    cocktails: {},\n    meals: {}\n  });\n\n  const getLSItem = item => JSON.parse(localStorage.getItem(item));\n\n  useEffect(() => {\n    const userLS = getLSItem('user') || {\n      email: ''\n    };\n    const emailLS = userLS.email;\n    const doneRecipesLS = getLSItem('doneRecipes') || [];\n    const favoriteRecipesLS = getLSItem('favoriteRecipes') || [];\n    const inProgressRecipesLS = getLSItem('inProgressRecipes') || {\n      cocktails: {},\n      meals: {}\n    };\n    setEmail(emailLS);\n    setDoneRecipes(doneRecipesLS);\n    setFavoriteRecipes(favoriteRecipesLS);\n    setInProgressRecipes(inProgressRecipesLS);\n  }, []);\n  const contextValue = {\n    LSValues: {\n      mealsToken: 1,\n      cocktailsToken: 1,\n      user: {\n        email\n      },\n      doneRecipes,\n      favoriteRecipes,\n      inProgressRecipes\n    },\n    LSFunctions: {\n      setEmail,\n      setDoneRecipes,\n      setFavoriteRecipes,\n      setInProgressRecipes\n    }\n  };\n  return /*#__PURE__*/React.createElement(LSContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nLSProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired\n};\nexport default LSProvider;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/context/LSProvider.js"],"names":["React","useState","useEffect","PropTypes","LSContext","LSProvider","children","email","setEmail","doneRecipes","setDoneRecipes","favoriteRecipes","setFavoriteRecipes","inProgressRecipes","setInProgressRecipes","cocktails","meals","getLSItem","item","JSON","parse","localStorage","getItem","userLS","emailLS","doneRecipesLS","favoriteRecipesLS","inProgressRecipesLS","contextValue","LSValues","mealsToken","cocktailsToken","user","LSFunctions","propTypes","oneOfType","arrayOf","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CACJY,iBADI,EAEJC,oBAFI,IAGFb,QAAQ,CAAC;AAAEc,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAAD,CAHZ;;AAKA,QAAMC,SAAS,GAAIC,IAAD,IAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBJ,IAArB,CAAX,CAA5B;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,MAAM,GAAGN,SAAS,CAAC,MAAD,CAAT,IAAqB;AAAEV,MAAAA,KAAK,EAAE;AAAT,KAApC;AACA,UAAMiB,OAAO,GAAGD,MAAM,CAAChB,KAAvB;AACA,UAAMkB,aAAa,GAAGR,SAAS,CAAC,aAAD,CAAT,IAA4B,EAAlD;AACA,UAAMS,iBAAiB,GAAGT,SAAS,CAAC,iBAAD,CAAT,IAAgC,EAA1D;AACA,UAAMU,mBAAmB,GAAGV,SAAS,CAAC,mBAAD,CAAT,IACvB;AAAEF,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADL;AAEAR,IAAAA,QAAQ,CAACgB,OAAD,CAAR;AACAd,IAAAA,cAAc,CAACe,aAAD,CAAd;AACAb,IAAAA,kBAAkB,CAACc,iBAAD,CAAlB;AACAZ,IAAAA,oBAAoB,CAACa,mBAAD,CAApB;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,CADJ;AAERC,MAAAA,cAAc,EAAE,CAFR;AAGRC,MAAAA,IAAI,EAAE;AAAEzB,QAAAA;AAAF,OAHE;AAIRE,MAAAA,WAJQ;AAKRE,MAAAA,eALQ;AAMRE,MAAAA;AANQ,KADS;AASnBoB,IAAAA,WAAW,EAAE;AACXzB,MAAAA,QADW;AAEXE,MAAAA,cAFW;AAGXE,MAAAA,kBAHW;AAIXE,MAAAA;AAJW;AATM,GAArB;AAiBA,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGc,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QADH,CADF;AAKD;;AAEDD,UAAU,CAAC6B,SAAX,GAAuB;AACrB5B,EAAAA,QAAQ,EAAEH,SAAS,CAACgC,SAAV,CAAoB,CAC5BhC,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACkC,IAA5B,CAD4B,EAE5BlC,SAAS,CAACkC,IAFkB,CAApB,EAGPC;AAJkB,CAAvB;AAOA,eAAejC,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport LSContext from './LSContext';\n\nfunction LSProvider({ children }) {\n  const [email, setEmail] = useState({ email: '' });\n  const [doneRecipes, setDoneRecipes] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const [\n    inProgressRecipes,\n    setInProgressRecipes,\n  ] = useState({ cocktails: {}, meals: {} });\n\n  const getLSItem = (item) => JSON.parse(localStorage.getItem(item));\n\n  useEffect(() => {\n    const userLS = getLSItem('user') || { email: '' };\n    const emailLS = userLS.email;\n    const doneRecipesLS = getLSItem('doneRecipes') || [];\n    const favoriteRecipesLS = getLSItem('favoriteRecipes') || [];\n    const inProgressRecipesLS = getLSItem('inProgressRecipes')\n      || { cocktails: {}, meals: {} };\n    setEmail(emailLS);\n    setDoneRecipes(doneRecipesLS);\n    setFavoriteRecipes(favoriteRecipesLS);\n    setInProgressRecipes(inProgressRecipesLS);\n  }, []);\n\n  const contextValue = {\n    LSValues: {\n      mealsToken: 1,\n      cocktailsToken: 1,\n      user: { email },\n      doneRecipes,\n      favoriteRecipes,\n      inProgressRecipes,\n    },\n    LSFunctions: {\n      setEmail,\n      setDoneRecipes,\n      setFavoriteRecipes,\n      setInProgressRecipes,\n    },\n  };\n\n  return (\n    <LSContext.Provider value={ contextValue }>\n      {children}\n    </LSContext.Provider>\n  );\n}\n\nLSProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default LSProvider;\n"]},"metadata":{},"sourceType":"module"}