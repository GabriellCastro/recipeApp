{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/RecipeDetails.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MainContext from '../context/MainContext';\nimport { getDrinkDetail, getDrinkRecomendations } from '../services/theCockTailAPI';\nimport { getMealDetail, getMealRecomendations } from '../services/theMealAPI';\nimport Recommendations from '../components/Recommendations';\nimport selectDetailClass from '../helpers/detailClass';\nimport VerifyStart from '../components/VerifyStart';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport RecipeDetailsCategory from '../components/RecipeDetailsCategory';\nimport RecipeDetailsIframe from '../components/RecipeDetailsIframe';\nimport DrinkLoader from '../components/DrinkLoader';\nimport FoodLoader from '../components/FoodLoader';\nimport listIngredients from '../helpers/listIngredients';\n\nfunction RecipeDetails({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const [recipeData, setRecipeData] = useState({\n    strYoutube: ''\n  });\n  const [recomendedRecipe, setRecomendedRecipe] = useState([]);\n  const MAX_RESULTS = 6;\n  const {\n    pathname\n  } = useLocation();\n  const recipeType = pathname.includes('comidas') ? 'comida' : 'bebida';\n  const {\n    strDrink,\n    strMeal,\n    strDrinkThumb,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n    strYoutube\n  } = recipeData;\n  const thumb = strDrinkThumb || strMealThumb;\n  const title = strDrink || strMeal;\n  const {\n    loading,\n    setLoading\n  } = useContext(MainContext);\n  useEffect(() => {\n    setLoading(true);\n\n    if (recipeType === 'bebida') {\n      const getDataDrinkDetail = async () => {\n        const data = await getDrinkDetail(id);\n        setRecipeData(...data);\n      };\n\n      getDataDrinkDetail();\n    } else {\n      const getFoodDetail = async () => {\n        const data = await getMealDetail(id);\n        setRecipeData(...data);\n      };\n\n      getFoodDetail();\n    }\n  }, [id, recipeType, setLoading]);\n  useEffect(() => {\n    if (recipeType === 'bebida') {\n      const fetchRecomended = async () => {\n        const recomendedArray = await getMealRecomendations();\n        setRecomendedRecipe(recomendedArray);\n        setLoading(false);\n      };\n\n      fetchRecomended();\n    } else {\n      const fetchRecomended = async () => {\n        const recomendedArray = await getDrinkRecomendations();\n        setRecomendedRecipe(recomendedArray);\n        setLoading(false);\n      };\n\n      fetchRecomended();\n    }\n  }, [recipeType, setLoading]);\n\n  function loader() {\n    return recipeType === 'bebida' ? /*#__PURE__*/React.createElement(DrinkLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(FoodLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }\n    });\n  }\n\n  function renderDetails() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"detail-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: thumb,\n      alt: title,\n      className: \"detail-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: selectDetailClass(strMeal),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-header-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(RecipeDetailsCategory, {\n      strAlcoholic: strAlcoholic,\n      strCategory: strCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-header-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShareButton, {\n      link: window.location.href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FavoriteButton, {\n      recipeData: recipeData,\n      type: recipeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail-infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Ingredientes\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"detail-ingredients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, listIngredients(recipeData).map((ingredient, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, `${ingredient}`))), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Instru\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      className: \"detail-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, strInstructions)), /*#__PURE__*/React.createElement(RecipeDetailsIframe, {\n      recipeType: recipeType,\n      strYoutube: strYoutube,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Recommendations, {\n      recommendations: recomendedRecipe.slice(0, MAX_RESULTS),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(VerifyStart, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return loading ? loader() : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 20\n    }\n  }, recipeData && renderDetails());\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default RecipeDetails;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/RecipeDetails.js"],"names":["React","useState","useEffect","useContext","useLocation","PropTypes","MainContext","getDrinkDetail","getDrinkRecomendations","getMealDetail","getMealRecomendations","Recommendations","selectDetailClass","VerifyStart","ShareButton","FavoriteButton","RecipeDetailsCategory","RecipeDetailsIframe","DrinkLoader","FoodLoader","listIngredients","RecipeDetails","match","params","id","recipeData","setRecipeData","strYoutube","recomendedRecipe","setRecomendedRecipe","MAX_RESULTS","pathname","recipeType","includes","strDrink","strMeal","strDrinkThumb","strMealThumb","strCategory","strInstructions","strAlcoholic","thumb","title","loading","setLoading","getDataDrinkDetail","data","getFoodDetail","fetchRecomended","recomendedArray","loader","renderDetails","window","location","href","map","ingredient","index","slice","propTypes","shape","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MainContext from '../context/MainContext';\nimport { getDrinkDetail, getDrinkRecomendations } from '../services/theCockTailAPI';\nimport { getMealDetail, getMealRecomendations } from '../services/theMealAPI';\nimport Recommendations from '../components/Recommendations';\nimport selectDetailClass from '../helpers/detailClass';\nimport VerifyStart from '../components/VerifyStart';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\nimport RecipeDetailsCategory from '../components/RecipeDetailsCategory';\nimport RecipeDetailsIframe from '../components/RecipeDetailsIframe';\nimport DrinkLoader from '../components/DrinkLoader';\nimport FoodLoader from '../components/FoodLoader';\nimport listIngredients from '../helpers/listIngredients';\n\nfunction RecipeDetails({ match: { params: { id } } }) {\n  const [recipeData, setRecipeData] = useState({ strYoutube: '' });\n  const [recomendedRecipe, setRecomendedRecipe] = useState([]);\n  const MAX_RESULTS = 6;\n  const { pathname } = useLocation();\n  const recipeType = pathname.includes('comidas') ? 'comida' : 'bebida';\n  const {\n    strDrink,\n    strMeal,\n    strDrinkThumb,\n    strMealThumb,\n    strCategory,\n    strInstructions,\n    strAlcoholic,\n    strYoutube,\n  } = recipeData;\n  const thumb = strDrinkThumb || strMealThumb;\n  const title = strDrink || strMeal;\n  const { loading, setLoading } = useContext(MainContext);\n\n  useEffect(() => {\n    setLoading(true);\n    if (recipeType === 'bebida') {\n      const getDataDrinkDetail = async () => {\n        const data = await getDrinkDetail(id);\n        setRecipeData(...data);\n      };\n      getDataDrinkDetail();\n    } else {\n      const getFoodDetail = async () => {\n        const data = await getMealDetail(id);\n        setRecipeData(...data);\n      };\n      getFoodDetail();\n    }\n  }, [id, recipeType, setLoading]);\n\n  useEffect(() => {\n    if (recipeType === 'bebida') {\n      const fetchRecomended = async () => {\n        const recomendedArray = await getMealRecomendations();\n        setRecomendedRecipe(recomendedArray);\n        setLoading(false);\n      };\n      fetchRecomended();\n    } else {\n      const fetchRecomended = async () => {\n        const recomendedArray = await getDrinkRecomendations();\n        setRecomendedRecipe(recomendedArray);\n        setLoading(false);\n      };\n      fetchRecomended();\n    }\n  }, [recipeType, setLoading]);\n\n  function loader() {\n    return recipeType === 'bebida'\n      ? <DrinkLoader /> : <FoodLoader />;\n  }\n\n  function renderDetails() {\n    return (\n      <section className=\"detail-page\">\n        <img\n          data-testid=\"recipe-photo\"\n          src={ thumb }\n          alt={ title }\n          className=\"detail-img\"\n        />\n        <div className={ selectDetailClass(strMeal) }>\n          <div className=\"detail-header-info\">\n            <h2 data-testid=\"recipe-title\">{ title }</h2>\n            <RecipeDetailsCategory\n              strAlcoholic={ strAlcoholic }\n              strCategory={ strCategory }\n            />\n          </div>\n          <div className=\"detail-header-btn\">\n            <ShareButton link={ window.location.href } />\n            <FavoriteButton recipeData={ recipeData } type={ recipeType } />\n          </div>\n        </div>\n        <div className=\"detail-infos\">\n          <h3>Ingredientes</h3>\n          <ul className=\"detail-ingredients\">\n            {\n              listIngredients(recipeData).map((ingredient, index) => (\n                <li\n                  key={ index }\n                  data-testid={ `${index}-ingredient-name-and-measure` }\n                >\n                  { `${ingredient}` }\n                </li>\n              ))\n            }\n          </ul>\n          <h3>Instruções</h3>\n          <p\n            data-testid=\"instructions\"\n            className=\"detail-description\"\n          >\n            {strInstructions}\n          </p>\n        </div>\n        <RecipeDetailsIframe recipeType={ recipeType } strYoutube={ strYoutube } />\n        <Recommendations recommendations={ recomendedRecipe.slice(0, MAX_RESULTS) } />\n        <VerifyStart id={ id } />\n      </section>\n    );\n  }\n\n  return (\n    loading\n      ? loader() : <div>{ recipeData && renderDetails() }</div>\n  );\n}\n\nRecipeDetails.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired,\n};\n\nexport default RecipeDetails;\n"]},"metadata":{},"sourceType":"module"}