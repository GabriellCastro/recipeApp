{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/project/sd-011-project-recipes-app/src/pages/DrinkRecipeInProgress.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { saveInProgressDrinkRecipes, saveDoneRecipes } from '../helpers/handleLocalStorage';\nimport MainContext from '../context/MainContext';\nimport LSContext from '../context/LSContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\n\nfunction DrinkRecipeInProgress({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const {\n    LSValues: {\n      inProgressRecipes\n    }\n  } = useContext(LSContext);\n  const {\n    LSFunctions: {\n      setInProgressRecipes,\n      setDoneRecipes\n    }\n  } = useContext(LSContext);\n  const [recipe, setRecipe] = useState({});\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const {\n    setLoading\n  } = useContext(MainContext);\n  const SLICE_NUMBER = -12;\n\n  function listIngredients() {\n    const MAX_INGREDIENTS = 20;\n    const list = [];\n\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      if (recipe[`strIngredient${index}`]) {\n        list.push(`${recipe[`strIngredient${index}`]} - ${recipe[`strMeasure${index}`]}`);\n      }\n    }\n\n    return list;\n  }\n\n  function lineThroughUsedIngredients({\n    target\n  }) {\n    if (target.checked) {\n      const updatedUsedIngredients = [...usedIngredients, target.value];\n      setUsedIngredients(updatedUsedIngredients);\n      saveInProgressDrinkRecipes(id, updatedUsedIngredients, setInProgressRecipes);\n    } else {\n      const remainingIngredients = usedIngredients.filter(ingredient => ingredient !== target.value);\n      setUsedIngredients(remainingIngredients);\n      saveInProgressDrinkRecipes(id, remainingIngredients, setInProgressRecipes);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getDrinkDetail(id).then(result => {\n      setRecipe(...result);\n      setLoading(false);\n    });\n  }, [setRecipe, setLoading, id]);\n  useEffect(() => {\n    const drinksIngredients = inProgressRecipes.cocktails ? inProgressRecipes.cocktails[id] || [] : [];\n    setUsedIngredients(drinksIngredients);\n  }, [id, inProgressRecipes]);\n  const {\n    strDrinkThumb,\n    strDrink,\n    strCategory,\n    strInstructions,\n    strAlcoholic\n  } = recipe;\n\n  function GetDate() {\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n    return dataAtual;\n  }\n\n  const saveDone = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: '',\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: GetDate(),\n    tags: []\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: strDrinkThumb,\n    \"data-testid\": \"recipe-photo\",\n    alt: strDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(ShareButton, {\n    link: window.location.href.slice(0, SLICE_NUMBER),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    recipeData: recipe,\n    type: \"bebida\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, strAlcoholic), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, listIngredients().map((ingredient, index) => /*#__PURE__*/React.createElement(\"label\", {\n    className: usedIngredients.includes(ingredient) ? 'ingredient-checked' : '',\n    htmlFor: index,\n    key: index,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: ingredient,\n    checked: usedIngredients.includes(ingredient),\n    type: \"checkbox\",\n    id: index,\n    name: \"ingredients\",\n    onClick: lineThroughUsedIngredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), `${ingredient}`))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(Link, {\n    to: \"/receitas-feitas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: listIngredients().length !== usedIngredients.length,\n    onClick: () => saveDoneRecipes(saveDone, setDoneRecipes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Finalizar Receita\")));\n}\n\nDrinkRecipeInProgress.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default DrinkRecipeInProgress;","map":{"version":3,"sources":["/home/gabriel/project/sd-011-project-recipes-app/src/pages/DrinkRecipeInProgress.js"],"names":["React","useEffect","useState","useContext","PropTypes","Link","getDrinkDetail","saveInProgressDrinkRecipes","saveDoneRecipes","MainContext","LSContext","ShareButton","FavoriteButton","DrinkRecipeInProgress","match","params","id","LSValues","inProgressRecipes","LSFunctions","setInProgressRecipes","setDoneRecipes","recipe","setRecipe","usedIngredients","setUsedIngredients","setLoading","SLICE_NUMBER","listIngredients","MAX_INGREDIENTS","list","index","push","lineThroughUsedIngredients","target","checked","updatedUsedIngredients","value","remainingIngredients","filter","ingredient","then","result","drinksIngredients","cocktails","strDrinkThumb","strDrink","strCategory","strInstructions","strAlcoholic","GetDate","data","Date","dia","String","getDate","padStart","mes","getMonth","ano","getFullYear","dataAtual","saveDone","type","area","category","alcoholicOrNot","name","image","doneDate","tags","window","location","href","slice","map","includes","length","propTypes","shape","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getDrinkDetail } from '../services/theCockTailAPI';\nimport { saveInProgressDrinkRecipes,\n  saveDoneRecipes } from '../helpers/handleLocalStorage';\nimport MainContext from '../context/MainContext';\nimport LSContext from '../context/LSContext';\nimport ShareButton from '../components/ShareButton';\nimport FavoriteButton from '../components/FavoriteButton';\n\nfunction DrinkRecipeInProgress({ match: { params: { id } } }) {\n  const { LSValues: { inProgressRecipes } } = useContext(LSContext);\n  const { LSFunctions: { setInProgressRecipes, setDoneRecipes } } = useContext(LSContext);\n  const [recipe, setRecipe] = useState({});\n  const [usedIngredients, setUsedIngredients] = useState([]);\n  const { setLoading } = useContext(MainContext);\n  const SLICE_NUMBER = -12;\n\n  function listIngredients() {\n    const MAX_INGREDIENTS = 20;\n    const list = [];\n    for (let index = 1; index <= MAX_INGREDIENTS; index += 1) {\n      if (recipe[`strIngredient${index}`]) {\n        list.push(\n          `${recipe[`strIngredient${index}`]} - ${recipe[`strMeasure${index}`]}`,\n        );\n      }\n    }\n    return list;\n  }\n\n  function lineThroughUsedIngredients({ target }) {\n    if (target.checked) {\n      const updatedUsedIngredients = [...usedIngredients, target.value];\n      setUsedIngredients(updatedUsedIngredients);\n      saveInProgressDrinkRecipes(id, updatedUsedIngredients, setInProgressRecipes);\n    } else {\n      const remainingIngredients = usedIngredients\n        .filter((ingredient) => ingredient !== target.value);\n      setUsedIngredients(remainingIngredients);\n      saveInProgressDrinkRecipes(id, remainingIngredients, setInProgressRecipes);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getDrinkDetail(id)\n      .then((result) => {\n        setRecipe(...result);\n        setLoading(false);\n      });\n  }, [setRecipe, setLoading, id]);\n\n  useEffect(() => {\n    const drinksIngredients = inProgressRecipes.cocktails\n      ? inProgressRecipes.cocktails[id] || []\n      : [];\n    setUsedIngredients(drinksIngredients);\n  }, [id, inProgressRecipes]);\n\n  const { strDrinkThumb, strDrink, strCategory, strInstructions, strAlcoholic } = recipe;\n\n  function GetDate() {\n    const data = new Date();\n    const dia = String(data.getDate()).padStart(2, '0');\n    const mes = String(data.getMonth() + 1).padStart(2, '0');\n    const ano = data.getFullYear();\n    const dataAtual = `${dia}/${mes}/${ano}`;\n    return dataAtual;\n  }\n\n  const saveDone = {\n    id,\n    type: 'bebida',\n    area: '',\n    category: '',\n    alcoholicOrNot: strAlcoholic,\n    name: strDrink,\n    image: strDrinkThumb,\n    doneDate: GetDate(),\n    tags: [],\n  };\n\n  return (\n    <div>\n      <img src={ strDrinkThumb } data-testid=\"recipe-photo\" alt={ strDrink } />\n      <h3 data-testid=\"recipe-title\">{ strDrink }</h3>\n      <ShareButton link={ window.location.href.slice(0, SLICE_NUMBER) } />\n      <FavoriteButton recipeData={ recipe } type=\"bebida\" />\n      <p>{ strAlcoholic }</p>\n      <p data-testid=\"recipe-category\">{ strCategory }</p>\n      <form>\n        {\n          listIngredients().map((ingredient, index) => (\n            <label\n              className={\n                usedIngredients.includes(ingredient) ? 'ingredient-checked' : ''\n              }\n              htmlFor={ index }\n              key={ index }\n              data-testid={ `${index}-ingredient-step` }\n            >\n              <input\n                value={ ingredient }\n                checked={ usedIngredients.includes(ingredient) }\n                type=\"checkbox\"\n                id={ index }\n                name=\"ingredients\"\n                onClick={ lineThroughUsedIngredients }\n              />\n              { `${ingredient}` }\n            </label>\n          ))\n        }\n      </form>\n      <p data-testid=\"instructions\">{ strInstructions }</p>\n      <Link to=\"/receitas-feitas\">\n        <button\n          type=\"button\"\n          data-testid=\"finish-recipe-btn\"\n          disabled={ listIngredients().length !== usedIngredients.length }\n          onClick={ () => saveDoneRecipes(saveDone, setDoneRecipes) }\n        >\n          Finalizar Receita\n        </button>\n      </Link>\n    </div>\n  );\n}\n\nDrinkRecipeInProgress.propTypes = {\n  match: PropTypes.shape(PropTypes.any).isRequired,\n};\nexport default DrinkRecipeInProgress;\n"]},"metadata":{},"sourceType":"module"}